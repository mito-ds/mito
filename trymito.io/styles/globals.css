/*
 * Copyright (c) Saga Inc.
 * Distributed under the terms of the GNU Affero General Public License v3.0 License.
 */

:root {
  /* 
    Leaving old colors here for testing. 
    TODO: Remove before merging

    --color-background: #2D2D2D;
    --color-light-background: #363637; 
    --color-light-background-accent: #3a3a3a; 
  */
  --color-background: #1c1824;
  --color-light-background: #130f1a; 
  --color-light-background-accent: #221b2e; 
  --color-text-primary: #ffffff;
  --color-text-secondary: #D0D0D0;
  --color-purple: #9D6CFF; 
  --color-light-purple: #ac84fc; 

  --color-text-gradient: linear-gradient(180deg, #9D6CFF 0.63%, rgba(157, 108, 255, 0.39) 100%);
  --color-twitter-blue: #479BE9;

  --color-yellow: #F2C94C;
  
  --color-video-background: #1c1824;
  --color-video-border: #7D68A8;

  --mito-light-blue: #E8EBF8;
  --mito-gray: #494650;
  --jupyter-orange: #F37726;
  --streamlit-red: #FF4B4B;

  /* 
    We can't currently use css variables in media queries unforuntetly! 
    See here: https://bholmes.dev/blog/alternative-to-css-variable-media-queries/

    So we leave documentation here to say that the breakpoint used in this project
    to swtich between mobile and desktop views is 50rem. It should be used everywhere!
  */
}

/* 
  Import Graphik font
*/

@font-face {
  font-family: "Graphik";
  src: url("/fonts/Graphik/GraphikRegular.otf");
  font-style: normal;
  font-weight: 400;
  font-display: swap;
}
@font-face {
  font-family: "Graphik";
  src: url("/fonts/Graphik/GraphikMedium.otf");
  font-style: medium;
  font-weight: 500;
  font-display: swap;
}
@font-face {
  font-family: "Graphik";
  src: url("/fonts/Graphik/GraphikSemibold.otf");
  font-style: semibold;
  font-weight: 500;
  font-display: swap;
}
@font-face {
  font-family: "Gerlik";
  src: url("/fonts/Gerlick/Gerlick400.otf");
  font-style: semibold;
  font-weight: 400;
  font-display: swap;
}


html,
body {
  padding: 0;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
  background-color: var(--color-background);
  font-size: 8px;

  /* 
    Overflow-x: hidden was important for the Tweets section to work properly. It cut the tweets off at the border of the page
    instead of expanding the page, eww!

    However, in order to make the Excel to Python table of contents work properly, using position: sticky, we had to remove overflow:hidden. 
    The position: sticky was not working properly because: 

    1. position: sticky; is not functioning because it's within a container that has a parent (body in this case) with overflow: hidden;. 
    The overflow: hidden; style on the body creates a new block formatting context that prevents position: sticky; from working as it's supposed to.

    2. The overflow: visible; on the immediate parent of the sticky element doesn't negate the overflow: hidden; on the body. 
    It's the overflow: hidden; on the body that's causing the issue.
    
  overflow-x: hidden;
  */
  width: 100vw;

  /* 
    Make clicking a link to navigate to another part of the page, 
    a smooth scroll instead of jumping. This is nice for the plans FAQ 
    that links back to the pro plan. 

    However, adding this lead to behavior where using the navbar to 
    switch between pages didn't start the new page at the top. See
    here: https://stackoverflow.com/a/68769366/14993381

    scroll-behavior: smooth;
  */
}

/* Set default margin and padding to 0 */
body,
h1,
h2,
h3,
p,
ol,
ul,
li,
a,
button {
  margin: 0;
  padding: 0;
  font-family: Graphik;
}

.img, .video {
  display: block;
  max-width: 100%;
}

section {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

section + section {
  margin-top: 12rem;
}

* {
  box-sizing: border-box;
}

button {
  border: none; 
}

h1 {
  color: var(--color-text-primary);
  font-size: 3rem;
  font-family: Graphik;
  font-style: semibold;
}

h2 {
  color: var(--color-text-primary);
  font-size: 2.5rem;
  font-family: Graphik;
  font-style: semibold;
}

h3 {
  color: var(--color-text-primary);
  font-size: 2rem;
  font-family: Graphik;
  font-style: semibold;
}

p,  li {
  font-size: 2rem;
  line-height: 1.5;
}

p, li {
  margin-top: 3rem;
  color: var(--color-text-secondary);
}

a {
  color: inherit;
  text-decoration: none;
  display: inline-block
}

.quote {
  font-style: italic;
}

.only-on-desktop-inline-block,
.display-desktop-only-flex,
.only-on-desktop {
  display: none !important;
}

.only-on-mobile {
  display: flex !important;
}

.only-on-mobile-block {
  display: block !important;
}

.only-on-mobile-inline-block {
  display: inline-block !important;
}

.flex-row {
  display: flex;
  flex-direction: row;
}

.flex-column {
  display: flex;
  flex-direction: column;
}

@media only screen and (min-width: 50em) {
  html,body {
    font-size: 16px;
  }

  h1 {
    font-size: 2.5rem;
  }

  h2 {
    font-size: 2rem;
  }

  h3 {
    font-size: 1.5rem;
  }

  p, li {
    font-size: 1rem;
    line-height: 1.25;
  }

  p {
    margin-top: 2rem;
  }

  .code-highlight {
    font-family: monospace;
    background: -webkit-linear-gradient(-90deg, #9D6CFF, rgba(177, 120, 252, 0.39));
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    color: linear-gradient(0deg, #FFFFFF, #000000);
  }

  section + section {
    margin-top: 10rem;
  }

  .display-inline-block {
    display: inline-block !important;
  }

  .only-on-desktop-inline-block {
    display: inline-block !important;
  }

  .only-on-desktop {
    display: block !important;
  }

  .display-desktop-only-flex {
    display: flex !important;
  }

  .only-on-mobile,
  .only-on-mobile-block,
  .only-on-mobile-inline-block {
    display: none !important;
  }

  .flex-row-desktop-only {
    display: flex;
    flex-direction: row;
  }

  .margin-top-3rem-mobile-only {
    margin-top: 0px;
  }

}

.center {
  text-align: center;
}

.vertical-center {
  display: flex;
  align-items: center;
}

/* 
  Text styles
*/

.text-highlight {
  color: var(--color-purple)
}

.highlight-on-hover:hover {
  color: var(--color-purple)
}

.text-primary {
  color: var(--color-text-primary);
}

.text-secondary {
  color: var(--color-text-secondary);
}

.text-dark {
  color: var(--color-background);
}

.text-twitter-blue {
  color: var(--color-twitter-blue)
}

.text-color-purple {
  color: var(--color-purple)
}

.text-color-jupyter-orange {
  color: var(--jupyter-orange);
}

.text-unselectable {
  user-select: none;
}

a.anchor {
  display: block;
  position: relative;
  top: -250px;
  visibility: hidden;
}

.text-color-streamlit-red {
  color: var(--streamlit-red)
}

.code-background {
  font-family: monospace;
  background-color: #D0D0D0;
  color: #494650;
  font-size: 1rem;
  padding: .25rem .5rem;
  border-radius: 2px;
  cursor: pointer;
}

.code-background:hover {
  background-color: var(--color-light-purple);
}

/* We don't want a video player to appear below the gifs on our blog, and so we globally hide them */
.kg-video-player {
  display: none;
}

.kg-embed-card > iframe {
  width: 100%;
  height: 250px;
}

/* We want rounded borders on images in our blog*/
.kg-image {
  border-radius: 3px;
}

/* 
  Apply basic styling to the code displayed in the blog. Because the slug is not prepended
  to the class names of the code blocks, we cannot apply this styling in [slug].module.css.
  So instead, we apply it here, taking care to only apply the styling to code cells that have 
  the an ancestor with the class .blog-content so we don't accidentally apply this styling to
  other code.
*/
.blog-content pre[class*=language-] {
  margin-top: 2rem !important;
  border: none !important;
  box-shadow: none !important;
  width: 100%;
}

.blog-content .code[class*=language-], .blog-content pre[class*=language-] {
  text-shadow: none !important;
  width: 100%; 
  overflow-x: auto; /* Enables horizontal scrolling */
}

.blog-content figcaption {
  font-size: .8rem !important;
  color: var(--color-text-secondary) !important;
  text-align: center;
}
