/*
 * Copyright (c) Saga Inc.
 * Distributed under the terms of the GNU Affero General Public License v3.0 License.
 */

/* AI Input Field Wrapper */
.ai_input_field_wrapper {
    display: flex;
    flex-direction: column;
    width: 100%;
    max-width: 700px;
    margin: 0 auto;
    padding: 0 20px;
}

/* Keyframes for animated gradient border */
@keyframes gradientShift {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

@keyframes gradientPulse {
    0%, 100% {
        opacity: 0.8;
    }
    50% {
        opacity: 1;
    }
}

/* Breathing animation for the input */
@keyframes breathe {
    0%, 100% {
        transform: scale(0.99);
    }
    50% {
        transform: scale(1.0);
    }
}

/* Gentle glow pulse */
@keyframes glowPulse {
    0%, 100% {
        box-shadow: 
            /* Default shadows */
            0 4px 20px rgba(0, 0, 0, 0.3),
            0 2px 12px rgba(0, 0, 0, 0.2),
            0 1px 4px rgba(0, 0, 0, 0.4),
            /* Inner highlight */
            inset 0 1px 0 rgba(255, 255, 255, 0.1),
            inset 0 -1px 0 rgba(0, 0, 0, 0.2),
            /* Subtle purple glow */
            0 0 20px rgba(157, 108, 255, 0.2),
            0 0 40px rgba(157, 108, 255, 0.1);
    }
    50% {
        box-shadow: 
            /* Default shadows */
            0 4px 20px rgba(0, 0, 0, 0.3),
            0 2px 12px rgba(0, 0, 0, 0.2),
            0 1px 4px rgba(0, 0, 0, 0.4),
            /* Inner highlight */
            inset 0 1px 0 rgba(255, 255, 255, 0.1),
            inset 0 -1px 0 rgba(0, 0, 0, 0.2),
            /* Enhanced purple glow */
            0 0 25px rgba(157, 108, 255, 0.3),
            0 0 50px rgba(157, 108, 255, 0.15);
    }
}

/* Icon sparkle/twinkle animation */
@keyframes iconTwinkle {
    0%, 90%, 100% {
        transform: scale(1) rotate(0deg);
        filter: drop-shadow(0 2px 4px rgba(157, 108, 255, 0.3));
    }
    5% {
        transform: scale(1.1) rotate(5deg);
        filter: drop-shadow(0 2px 6px rgba(157, 108, 255, 0.5)) brightness(1.2);
    }
    10% {
        transform: scale(1.05) rotate(-3deg);
        filter: drop-shadow(0 2px 6px rgba(157, 108, 255, 0.5)) brightness(1.1);
    }
    15% {
        transform: scale(1) rotate(0deg);
        filter: drop-shadow(0 2px 4px rgba(157, 108, 255, 0.3));
    }
}

/* Icon color shifting */
@keyframes iconColorShift {
    0%, 100% {
        color: var(--color-purple, #9D6CFF);
    }
    25% {
        color: var(--color-light-purple, #ac84fc);
    }
    50% {
        color: #c084fc;
    }
    75% {
        color: var(--color-light-purple, #ac84fc);
    }
}

/* Sparkle effects */
@keyframes sparkle {
    0%, 100% {
        opacity: 0;
        transform: scale(0) rotate(0deg);
    }
    50% {
        opacity: 1;
        transform: scale(1) rotate(180deg);
    }
}

/* Input container */
.input_container {
    width: 100%;
    max-width: 900px;
    margin: 0 auto;
    margin-bottom: 20px;
    height: 30px;
    position: relative;
    
    /* Add breathing animation */
    animation: breathe 4s ease-in-out infinite;

}

/* Stop breathing animation when input has content */
.input_container:has(.prompt_input:not(:placeholder-shown)) {
    animation: none;
}

/* Fallback for browsers that don't support :has() */
.input_container:focus-within {
    animation: none;
}

/* Re-enable breathing only when focused but empty */
.input_container:focus-within:has(.prompt_input:placeholder-shown) {
    animation: breathe 4s ease-in-out infinite;
}

/* Input wrapper */
.input_wrapper {
    display: flex;
    align-items: center;
    
    /* Dark glass-morphism background with gradient */
    background: linear-gradient(
        135deg,
        rgba(34, 27, 46, 0.9) 0%,
        rgba(28, 24, 36, 0.95) 50%,
        rgba(19, 15, 26, 0.9) 100%
    );
    
    /* Glass-morphism backdrop blur */
    backdrop-filter: blur(20px) saturate(180%);
    -webkit-backdrop-filter: blur(20px) saturate(180%);
    
    /* Dark purple border */
    border: 1px solid rgba(157, 108, 255, 0.4);
    border-radius: 12px;
    padding: 8px 10px;
    gap: 12px;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    
    /* Enhanced default shadows with purple glow for dark mode */
    box-shadow: 
        /* Main depth shadow */
        0 4px 20px rgba(0, 0, 0, 0.3),
        /* Mid-range shadow */
        0 2px 12px rgba(0, 0, 0, 0.2),
        /* Close shadow for definition */
        0 1px 4px rgba(0, 0, 0, 0.4),
        /* Inner highlight */
        inset 0 1px 0 rgba(255, 255, 255, 0.1),
        /* Inner shadow for depth */
        inset 0 -1px 0 rgba(0, 0, 0, 0.2),
        /* Default purple glow */
        0 0 20px rgba(157, 108, 255, 0.2),
        0 0 40px rgba(157, 108, 255, 0.1);
    
    position: relative;
    overflow: hidden;
    z-index: 1;
    
    /* Add gentle glow pulse animation */
    animation: glowPulse 3.5s ease-in-out infinite;
}

/* Stop glow pulse when input has content */
.input_wrapper:has(.prompt_input:not(:placeholder-shown)) {
    animation: none;
}

/* Enhanced glass overlay for dark mode */
.input_wrapper::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0.05) 0%,
        rgba(255, 255, 255, 0.02) 50%,
        rgba(157, 108, 255, 0.03) 100%
    );
    opacity: 0;
    transition: opacity 0.4s ease;
    pointer-events: none;
}

/* Gradient shimmer effect for dark mode */
.input_wrapper::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg,
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 0.1) 50%,
        rgba(255, 255, 255, 0) 100%
    );
    transition: left 0.6s ease;
    pointer-events: none;
}

.input_wrapper:hover {
    transform: translateY(-2px);
    
    /* Enhanced hover shadows with purple accent for dark mode */
    box-shadow: 
        /* Main depth shadow - enhanced */
        0 8px 32px rgba(0, 0, 0, 0.4),
        /* Mid-range shadow */
        0 4px 20px rgba(0, 0, 0, 0.3),
        /* Close shadow */
        0 2px 8px rgba(0, 0, 0, 0.5),
        /* Purple accent shadows */
        0 4px 24px rgba(157, 108, 255, 0.3),
        0 2px 12px rgba(172, 132, 252, 0.2),
        /* Inner highlights */
        inset 0 1px 0 rgba(255, 255, 255, 0.15),
        inset 0 -1px 0 rgba(157, 108, 255, 0.2);
    
    /* Enhanced dark glass background */
    background: linear-gradient(
        135deg,
        rgba(34, 27, 46, 0.95) 0%,
        rgba(28, 24, 36, 1) 50%,
        rgba(19, 15, 26, 0.95) 100%
    );
    
    border-color: rgba(157, 108, 255, 0.6);
    
    /* Pause the glow pulse animation on hover */
    animation: none;
}

.input_wrapper:hover::before {
    opacity: 1;
}

.input_wrapper:hover::after {
    left: 100%;
}

.input_wrapper:focus-within {
    transform: translateY(-3px);
    
    /* Focus state with animated purple shadows for dark mode */
    box-shadow: 
        /* Main depth shadow - maximum */
        0 12px 40px rgba(0, 0, 0, 0.5),
        /* Mid-range shadow */
        0 6px 24px rgba(0, 0, 0, 0.4),
        /* Close shadow */
        0 3px 12px rgba(0, 0, 0, 0.6),
        /* Purple accent shadows - intense */
        0 8px 32px rgba(157, 108, 255, 0.4),
        0 4px 16px rgba(172, 132, 252, 0.3),
        0 2px 8px rgba(192, 132, 252, 0.25),
        /* Focus ring */
        0 0 0 4px rgba(157, 108, 255, 0.25),
        /* Inner effects */
        inset 0 1px 0 rgba(255, 255, 255, 0.2),
        inset 0 -1px 0 rgba(157, 108, 255, 0.3),
        inset 0 0 20px rgba(157, 108, 255, 0.1);
    
    /* Enhanced focus background for dark mode */
    background: linear-gradient(
        135deg,
        rgba(34, 27, 46, 1) 0%,
        rgba(28, 24, 36, 1) 50%,
        rgba(25, 20, 35, 1) 100%
    );
    
    border-color: rgba(157, 108, 255, 0.8);
    
    /* Pause the glow pulse animation on focus */
    animation: none;
}

.input_wrapper:focus-within::before {
    opacity: 1;
    animation: gradientPulse 2s ease-in-out infinite;
}

/* Left icon with enhanced animations for dark mode */
.input_icon_left {
    font-size: 20px;
    color: var(--color-purple, #9D6CFF); /* Use CSS variable with fallback */
    display: flex;
    align-items: center;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    filter: drop-shadow(0 2px 4px rgba(157, 108, 255, 0.3));
    font-weight: 500;
    position: relative;
    z-index: 2;
    
    /* Add sparkle animations */
    animation: 
        iconTwinkle 5s ease-in-out infinite,
        iconColorShift 8s ease-in-out infinite;
}

/* Stop icon animations when input has content */
.input_wrapper:has(.prompt_input:not(:placeholder-shown)) .input_icon_left {
    animation: none;
    color: var(--color-purple, #9D6CFF); /* Keep consistent color when typing */
}

/* Sparkle effects around the icon */
.input_icon_left::before,
.input_icon_left::after {
    content: 'âœ¨';
    position: absolute;
    font-size: 8px;
    pointer-events: none;
    animation: sparkle 6s ease-in-out infinite;
    color: var(--color-light-purple, #ac84fc);
}

/* Hide sparkles when input has content */
.input_wrapper:has(.prompt_input:not(:placeholder-shown)) .input_icon_left::before,
.input_wrapper:has(.prompt_input:not(:placeholder-shown)) .input_icon_left::after {
    animation: none;
    opacity: 0;
}

.input_icon_left::before {
    top: -5px;
    right: -8px;
    animation-delay: 0s;
}

.input_icon_left::after {
    bottom: -3px;
    left: -6px;
    animation-delay: 3s;
}

.input_wrapper:focus-within .input_icon_left {
    color: var(--color-light-purple, #ac84fc);
    transform: scale(1.15);
    filter: drop-shadow(0 4px 8px rgba(157, 108, 255, 0.5));
    animation: none; /* Stop default animations when focused */
}

.input_wrapper:hover .input_icon_left,
.input_wrapper:hover .input_action_button,
.generating .input_icon_left,
.generating .input_action_button {
    color: var(--color-purple, #9D6CFF);
    transform: scale(1.08);
    filter: drop-shadow(0 3px 6px rgba(157, 108, 255, 0.4));
}

.input_wrapper:hover .input_icon_left {
    animation: none; /* Stop default animations when hovered */
}

/* Input field */
.prompt_input {
    flex: 1;
    border: none;
    outline: none;
    background: transparent;
    font-size: 16px;
    font-weight: 400;
    line-height: 1.4;
    font-family: var(--jp-ui-font-family, -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif);
    color: var(--color-text-primary, #ffffff); /* White text for dark mode */
    padding: 6px 0;
    transition: all 0.4s ease;
    position: relative;
    z-index: 2;
}

.prompt_input::placeholder {
    color: var(--color-text-secondary, #D0D0D0); /* Light gray placeholder for dark mode */
    font-weight: 400;
    transition: all 0.3s ease;
}

.prompt_input:focus {
    color: var(--color-text-primary, #ffffff);
}

.prompt_input:focus::placeholder {
    opacity: 0.6;
    transform: translateY(-1px);
}

/* Input action buttons */
.input_action_button {
    width: 32px;
    height: 32px;
    border: none;
    border-radius: 50%;
    background: linear-gradient(
        135deg,
        rgba(157, 108, 255, 0.2) 0%,
        rgba(172, 132, 252, 0.15) 100%
    );
    color: var(--color-purple, #9D6CFF); /* Purple color for dark mode */
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 18px;
    font-weight: 600;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    z-index: 2;
    box-shadow: 
        0 2px 8px rgba(157, 108, 255, 0.2),
        inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.input_action_button:hover:not(:disabled) {
    transform: scale(1.15);
    background: linear-gradient(
        135deg,
        rgba(157, 108, 255, 0.3) 0%,
        rgba(172, 132, 252, 0.2) 100%
    );
    box-shadow: 
        0 4px 16px rgba(157, 108, 255, 0.3),
        0 2px 8px rgba(172, 132, 252, 0.25),
        inset 0 1px 0 rgba(255, 255, 255, 0.2);
}

.input_action_button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
    color: var(--color-text-secondary, #D0D0D0);
    background: transparent;
    box-shadow: none;
}

/* Right icons container */
.input_icons_right {
    display: flex;
    align-items: center;
    gap: 4px;
    z-index: 2;
    position: relative;
}

/* Generating state enhancements */
.generating {
    animation: gradientPulse 2s ease-in-out infinite;
}

.generating .input_wrapper {
    box-shadow: 
        0 8px 32px rgba(157, 108, 255, 0.4),
        0 4px 16px rgba(172, 132, 252, 0.3),
        0 2px 8px rgba(192, 132, 252, 0.25),
        inset 0 1px 0 rgba(255, 255, 255, 0.15),
        inset 0 0 20px rgba(157, 108, 255, 0.15);
    
    /* Pause breathing during generation */
    animation: none;
}

.generating .input_container {
    /* Pause breathing during generation */
    animation: none;
}

/* Example buttons container */
.examples_container {
    display: flex;
    flex-direction: column;
    gap: 12px;
    margin-top: 24px;
    width: 100%;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
}

/* Individual example button */
.example_button {
    background: linear-gradient(
        135deg,
        rgba(34, 27, 46, 0.8) 0%,
        rgba(28, 24, 36, 0.9) 50%,
        rgba(19, 15, 26, 0.8) 100%
    );
    border: 1px solid rgba(157, 108, 255, 0.3);
    border-radius: 8px;
    padding: 14px 20px 14px 24px; /* Increased padding with subtle left indentation */
    color: var(--color-text-secondary, #D0D0D0);
    font-size: 14px;
    font-weight: 400;
    font-family: var(--jp-ui-font-family, -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif);
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    text-align: left; /* Changed from center to left */
    line-height: 1.4; /* Improved from 1.3 for better readability */
    width: 100%;
    
    /* Subtle shadow */
    box-shadow: 
        0 2px 8px rgba(0, 0, 0, 0.2),
        0 1px 4px rgba(0, 0, 0, 0.1),
        inset 0 1px 0 rgba(255, 255, 255, 0.05);
}

.example_button:hover {
    background: linear-gradient(
        135deg,
        rgba(34, 27, 46, 0.9) 0%,
        rgba(28, 24, 36, 1) 50%,
        rgba(19, 15, 26, 0.9) 100%
    );
    border-color: rgba(157, 108, 255, 0.5);
    color: var(--color-text-primary, #ffffff);
    transform: translateY(-2px);
    padding-left: 28px; /* Slightly more indentation on hover for subtle interaction feedback */
    
    /* Enhanced hover shadow */
    box-shadow: 
        0 4px 16px rgba(0, 0, 0, 0.3),
        0 2px 8px rgba(0, 0, 0, 0.2),
        0 2px 8px rgba(157, 108, 255, 0.2),
        inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.example_button:active {
    transform: translateY(-1px);
    transition-duration: 0.1s;
}

/* Hide examples when generating */
.generating + .examples_container {
    opacity: 0.5;
    pointer-events: none;
    transform: translateY(4px);
} 