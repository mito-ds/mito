import { expect, test } from '@playwright/test';
import { awaitResponse } from '../streamlit_ui_tests/utils';
import { waitForIdle } from '../jupyterlab_ui_tests/utils';

test.describe('Mitosheet Jupyter Notebook integration', () => {
  test('renders a mitosheet.sheet() and generates code', async ({ page }) => {

    await page.goto('http://localhost:8888/');
    await page.getByRole('menuitem', { name: 'New' }).click();

    const popupPromise = page.waitForEvent('popup');
    await page.getByRole('menu').getByText('Python 3 (ipykernel)').click();
    const popup = await popupPromise;

    await popup.getByRole('textbox').fill(`
import pandas as pd
df = pd.DataFrame({ 'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9] })
import mitosheet
mitosheet.sheet(df)`)
    await popup.getByRole('textbox').press('Shift+Enter');

    // wait for 5 seconds for Mito to load
    await popup.waitForTimeout(5000);

    // Check that clicking the Insert button adds a new column
    await expect(popup.locator('.endo-column-header-final-container')).toHaveCount(3);
    await popup.locator('.mito-toolbar-button', { hasText: 'Insert' }).click();
    await expect(popup.locator('.endo-column-header-final-container')).toHaveCount(4);

    // Check that the code generated by the mitosheet is correct
    await expect(popup.getByText('from mitosheet.public.v3')).toBeVisible();
    await expect(popup.getByText("# Added column new-column")).toBeVisible();
  });
});

